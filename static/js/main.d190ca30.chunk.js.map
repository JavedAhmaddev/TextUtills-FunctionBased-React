{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","xtemp","myfunction","item","index","finaltext","charAt","toUpperCase","slice","console","log","style","color","heading","backgroundColor","caretColor","value","onChange","event","target","rows","length","newtext","showAlert","toLowerCase","arr","split","forEach","join","defaultProps","aboutText","Alert","alert","role","message","App","setMode","setAlert","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d190ca30.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import {Link} from 'react-router-dom'\r\n\r\n \r\n\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"#\"> {props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                \r\n                {/* <Link className=\"nav-link active\" to=\"/\"> Home</Link> */}\r\n                <a className=\"nav-link active\" href=\"#\"> Home</a>\r\n                \r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n              \r\n                <Link className=\"nav-link\" to=\"/about\"> {props.aboutText}</Link>\r\n                \r\n              </li> */}\r\n              \r\n            </ul>\r\n            <div className={`form-check form-switch text-${props.mode === 'light'? 'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes ={\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string,\r\n}\r\nNavbar.defaultProps ={\r\n    title: \"Set Title here\",\r\n    aboutText:\"About text here\",\r\n}","import React, { useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n    const [text, setText] = useState('');\r\n    var xtemp = \"\";\r\n    const handleUpClick = () => {\r\n\r\n        if (text.length > 0) {\r\n            let newtext = text.toUpperCase();\r\n            setText(newtext);\r\n            props.showAlert(\"Converted to Upper Case\", \"success\");\r\n        }\r\n        else\r\n            props.showAlert(\"Enter Some Text First\", \"danger\");\r\n    }\r\n\r\n    const handleLoClick = () => {\r\n\r\n        if (text.length > 0) {\r\n            let newtext = text.toLowerCase();\r\n            setText(newtext);\r\n            props.showAlert(\"Converted to Lower Case\", \"success\");\r\n        }\r\n        else\r\n            props.showAlert(\"Enter Some Text First\", \"danger\");\r\n\r\n    }\r\n    const handlespaces = () => {\r\n\r\n        if (text.length > 0) {\r\n            let newtext = text.split(/[ ]+/);\r\n            setText(newtext.join(\" \"));\r\n            props.showAlert(\"Extra Spaces removed\", \"success\");\r\n        }\r\n        else\r\n            props.showAlert(\"Enter Some Text First\", \"danger\");\r\n\r\n    }\r\n\r\n\r\n    function myfunction(item, index) {\r\n        var temp, temp1, finaltext;\r\n        temp = item.charAt(0);\r\n        temp = temp.toUpperCase();\r\n        temp1 = item.slice(1);\r\n        finaltext = temp + temp1 + \" \";\r\n        console.log(finaltext);\r\n        xtemp += finaltext;\r\n\r\n\r\n    }\r\n    const handleCapClick = () => {\r\n\r\n        if (text.length > 0) {\r\n            let newtext = text.toLowerCase();\r\n            console.log(newtext);\r\n            var arr = [];\r\n\r\n\r\n            arr = newtext.split(\" \");\r\n            console.log(arr);\r\n            arr.forEach(myfunction);\r\n\r\n            setText(xtemp);\r\n            props.showAlert(\"Converted to Capitized Case\", \"success\");\r\n        }\r\n        else\r\n            props.showAlert(\"Enter Some Text First\", \"danger\");\r\n\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n\r\n        setText(event.target.value);\r\n    }\r\n    const handleClClick = () => {\r\n\r\n        if (text.length > 0) {\r\n            let newtext = \"\";\r\n            setText(newtext);\r\n            props.showAlert(\"Text is Cleared\", \"success\");\r\n        }\r\n        else\r\n            props.showAlert(\"Enter Some Text First\", \"danger\");\r\n\r\n    }\r\n    function sp() {\r\n        var a = text.split(\" \").length;\r\n        if (a === 1) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return (text.split(\" \").length) - 1;\r\n        }\r\n    }\r\n    // setText(\"Enter updated text\");\r\n    return (\r\n        <>\r\n            <div className=\"container\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }} >\r\n                <h1>{props.heading}</h1>\r\n\r\n                <div className=\"mb-1\">\r\n\r\n                    <textarea className=\"form-control textareaindex\" id=\"mybox\" style={{ backgroundColor: props.mode === 'dark' ? '#006666' : 'white', color: props.mode === 'dark' ? 'white' : 'black', caretColor: props.mode === 'dark' ? 'white' : 'black' }} value={text} onChange={handleOnChange} rows=\"7\"></textarea>\r\n                </div>\r\n                <div ></div>\r\n                <button className=\"btn btn-primary m-1\" onClick={handleUpClick}> Convert to Upper Case</button>\r\n                <button className=\"btn btn-primary m-1\" onClick={handleLoClick}> Convert to Lower Case</button>\r\n                <button className=\"btn btn-primary m-1\" onClick={handleCapClick}> Capitilized Case</button>\r\n                <button className=\"btn btn-primary m-1\" onClick={handleClClick}> Clear Text</button>\r\n                <button className=\"btn btn-primary m-1\" onClick={handlespaces}> Remove Extra Spaces</button>\r\n\r\n            </div>\r\n            <div className=\"container my-1\" style={{ color: props.mode === 'dark' ? 'white' : 'black' }}>\r\n                <h1> Your text Summary</h1>\r\n                <p>{sp()} words and {text.length} characters </p>\r\n                <p> {(0.008) * text.split(\" \").length}  minutes to read the text</p>\r\n                <h2> Preview</h2>\r\n                <p>{text.length > 0 ? text : 'Enter something in the textbox to preview it here'}</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            {/* <strong> {capitalize(props.alert.type)} </strong> */}  <strong>{props.alert.message} </strong> \r\n            \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Alert\r\n","import React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport './App.css';\nimport Alert from './components/Alert';\n// import About from './components/About';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n\n\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n  const toggleMode = () => {\n\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode has been enabled\", \"success\");\n      document.title = \"Textutills-Dark Mode\";\n    }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\", \"success\");\n      document.title = \"Textutills-Light Mode\";\n    }\n\n  }\n  return (\n\n    <>\n\n\n\n      <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n\n      <div className=\"container my-3\">\n        <TextForm showAlert={showAlert} heading=\"Enter the text to Analyze below\" mode={mode} />\n      </div>\n      {/* <Router>\n          <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\" mode={mode} toggleMode={toggleMode} />\n          <Alert alert={alert} />\n\n\n          {<div className=\"container my-3\">\n\n          <Switch>\n              <Route exact path=\"/about\">\n                <About />\n              </Route>\n              \n              <Route exact path=\"/\">\n              <TextForm showAlert={showAlert} heading=\"Enter the text to Analyze below\" mode={mode} />\n              </Route>\n          </Switch>\n            \n          </div>}\n      </Router> */}\n    </>\n\n  );\n\n\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}